{"version":3,"sources":["components/Settings/Settings.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Settings","itemWidth","setItemWidth","step","setStep","frameSize","setFrameSize","animationDuration","setAnimationDuration","infinite","setInfinite","className","htmlFor","type","id","value","onChange","event","size","target","min","max","isInfinite","i","Carousel","images","useState","shift","setShift","lastPosition","length","style","width","transform","transitionDuration","map","el","src","alt","String","height","Math","random","onClick","nextShift","loop","splice","unshift","push","moveLeft","disabled","moveRight","App","newStep","newSize","ReactDOM","render","document","getElementById"],"mappings":"mNAgBaA,EAA4B,SAAC,GAWnC,IAVLC,EAUI,EAVJA,UACAC,EASI,EATJA,aACAC,EAQI,EARJA,KACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,UACAC,EAKI,EALJA,aACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,qBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,YAyBA,OACE,uBAAMC,UAAU,WAAhB,UACE,wBACEC,QAAQ,YACRD,UAAU,kBAFZ,UAIE,uBACEE,KAAK,OACLF,UAAU,iBACVG,GAAG,YACHC,MAAOd,EACPe,SAAU,SAAAC,GAAK,OAlCGC,GAkCmBD,EAAME,OAAOJ,WA/BpDb,GAFI,IACDgB,EAAO,IACG,IAIAA,GAPnB,IAA0BA,KAyBtB,gBAcA,wBACEN,QAAQ,OACRD,UAAU,kBAFZ,UAIE,uBACEE,KAAK,SACLF,UAAU,iBACVG,GAAG,OACHM,IAAI,IACJC,IAAI,IACJN,MAAOZ,EACPa,SAAU,SAAAC,GAAK,OAAIb,GAASa,EAAME,OAAOJ,UAX7C,UAgBA,wBACEH,QAAQ,aACRD,UAAU,kBAFZ,UAIE,uBACEE,KAAK,SACLF,UAAU,iBACVG,GAAG,aACHM,IAAI,IACJC,IAAI,IACJN,MAAOV,EACPW,SAAU,SAAAC,GAAK,OAAIX,GAAcW,EAAME,OAAOJ,UAXlD,gBAgBA,wBACEH,QAAQ,WACRD,UAAU,kBAFZ,UAIE,uBACEE,KAAK,SACLF,UAAU,iBACVG,GAAG,WACHC,MAAOR,EACPa,IAAI,IACJC,IAAI,OACJL,SAAU,SAAAC,GAAK,OAAIT,EAAqBS,EAAME,OAAOJ,UAXzD,wBAiBA,wBACEH,QAAQ,WACRD,UAAU,4CAFZ,UAIE,uBACEE,KAAK,WACLF,UAAU,0CACVG,GAAG,WACHC,MAAON,EACPO,SAtFR,SAAyBC,GACvB,IAAIK,EAAaL,EAAME,OAAOJ,MAQ9BL,EALEY,EADiB,UAAfA,EACW,OAEA,YAuEb,kB,OCvGFC,G,MAAI,GAEKC,EAA4B,SAAC,GAOnC,IANLC,EAMI,EANJA,OACAxB,EAKI,EALJA,UACAE,EAII,EAJJA,KACAE,EAGI,EAHJA,UACAE,EAEI,EAFJA,kBACAE,EACI,EADJA,SAEA,EAA0BiB,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,GAAgB5B,GAAawB,EAAOK,OAASzB,GAuCnD,OACE,sBAAKM,UAAU,WAAf,UACE,qBACEA,UAAU,oBACVoB,MAAO,CAAEC,MAAM,GAAD,OAAK3B,EAAYJ,EAAjB,OAFhB,SAIE,oBACEU,UAAU,iBACVoB,MAAO,CACLE,UAAU,cAAD,OAAgBN,EAAhB,OACTO,mBAAmB,GAAD,OAAK3B,EAAL,OAJtB,SAOGkB,EAAOU,KAAI,SAAAC,GAAE,OACZ,6BACE,qBACEC,IAAKD,EACLE,IAAKC,OAAOhB,GACZQ,MAAO,CACLC,MAAM,GAAD,OAAK/B,EAAL,MACLuC,OAAO,GAAD,OAAKvC,EAAL,UANHwC,KAAKC,iBAcpB,wBACE/B,UAAU,gBACVE,KAAK,SACL8B,QAAS,kBAnEf,WACE,IAAIC,EAAYjB,EAAS1B,EAAYE,EAIrC,GAFAoB,EAAKA,GAAKE,EAAOK,OAAS,GAAM,EAEf,SAAbrB,EAAqB,CACvB,IAAMoC,EAAO,YAAIpB,GAAQqB,OAAOvB,EAAI,EAAG,GAEvCE,EAAOsB,UAEPtB,EAAOuB,KAAP,MAAAvB,EAAM,YAASoB,SACNhB,EAAee,IACxBA,EAAYf,GAGdD,EAASgB,GAoDUK,IACfC,SAAUvB,IAAUE,GAA6B,UAAbpB,EAJtC,kBASA,wBACEE,UAAU,gBACVE,KAAK,SACLqC,SAAoB,IAAVvB,GAA4B,UAAblB,EACzBkC,QAAS,kBA3Df,WACE,IAAIC,EAAYjB,EAAS1B,EAAYE,EAErCoB,EAAKA,GAAKE,EAAOK,OAAS,GAAM,EAEf,SAAbrB,GAAiC,IAAVkB,GAzBP,EA+BAiB,IAClBA,EAhCkB,GAmCpBhB,EAASgB,IATPhB,GAAU,MAqDOuB,IACf,UAAQ,OALV,sBC/FA1B,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGW2B,EAAM,WACjB,MAAkC1B,mBAAS,KAA3C,mBAAOzB,EAAP,KAAkBC,EAAlB,KACA,EAAwBwB,mBAAS,GAAjC,mBAAOvB,EAAP,KAAaC,EAAb,KACA,EAAkCsB,mBAAS,GAA3C,mBAAOrB,EAAP,KAAkBC,EAAlB,KACA,EAAkDoB,mBAAS,OAA3D,mBAAOnB,EAAP,KAA0BC,EAA1B,KACA,EAAgCkB,mBAAS,SAAzC,mBAAOjB,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAI,UAAQ,QAAZ,iCAAsCc,EAAOK,OAA7C,aAEA,cAAC,EAAD,CACE5B,aAAc,SAAA8B,GAAK,OAAI9B,EAAa8B,IACpC/B,UAAWA,EACXE,KAAMA,EACNC,QAAS,SAAAiD,GAAO,OAAIjD,EAAQiD,IAC5BhD,UAAWA,EACXC,aAAc,SAAAgD,GAAO,OAAIhD,EAAagD,IACtC/C,kBAAmBA,EACnBC,qBAAsBA,EACtBC,SAAUA,EACVC,YAAa,SAAAK,GACXL,EAAYK,MAIhB,cAAC,EAAD,CACEU,OAAQA,EACRxB,UAAWA,EACXE,KAAMA,EACNE,UAAWA,EACXE,kBAAmBA,EACnBE,SAAUA,QC/ClB8C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ddc97586.chunk.js","sourcesContent":["/* eslint-disable react/button-has-type */\nimport './Settings.scss';\n\ntype Props = {\n  itemWidth: number\n  setItemWidth: (value: number) => void,\n  step: number;\n  setStep: (value: number) => void;\n  frameSize: number,\n  setFrameSize: (value: number) => void;\n  animationDuration: string,\n  setAnimationDuration: (value: string) => void\n  infinite: string,\n  setInfinite: (value: string) => void\n};\n\nexport const Settings: React.FC<Props> = ({\n  itemWidth,\n  setItemWidth,\n  step,\n  setStep,\n  frameSize,\n  setFrameSize,\n  animationDuration,\n  setAnimationDuration,\n  infinite,\n  setInfinite,\n}) => {\n  function setWidthForImage(size: number) {\n    switch (true) {\n      case size > 300:\n        setItemWidth(300);\n        break;\n\n      default:\n        setItemWidth(size);\n    }\n  }\n\n  function checkBoxHandler(event: { target: { value: string; }; }) {\n    let isInfinite = event.target.value;\n\n    if (isInfinite === 'false') {\n      isInfinite = 'true';\n    } else {\n      isInfinite = 'false';\n    }\n\n    setInfinite(isInfinite);\n  }\n\n  return (\n    <form className=\"settings\">\n      <label\n        htmlFor=\"itemWidth\"\n        className=\"settings__label\"\n      >\n        <input\n          type=\"text\"\n          className=\"settings__item\"\n          id=\"itemWidth\"\n          value={itemWidth}\n          onChange={event => setWidthForImage(+event.target.value)}\n        />\n        Item Width\n      </label>\n\n      <label\n        htmlFor=\"Step\"\n        className=\"settings__label\"\n      >\n        <input\n          type=\"number\"\n          className=\"settings__item\"\n          id=\"Step\"\n          min=\"1\"\n          max=\"5\"\n          value={step}\n          onChange={event => setStep(+event.target.value)}\n        />\n        Step\n      </label>\n\n      <label\n        htmlFor=\"Frame Size\"\n        className=\"settings__label\"\n      >\n        <input\n          type=\"number\"\n          className=\"settings__item\"\n          id=\"Frame Size\"\n          min=\"1\"\n          max=\"5\"\n          value={frameSize}\n          onChange={event => setFrameSize(+event.target.value)}\n        />\n        Frame Size\n      </label>\n\n      <label\n        htmlFor=\"Duration\"\n        className=\"settings__label\"\n      >\n        <input\n          type=\"number\"\n          className=\"settings__item\"\n          id=\"Duration\"\n          value={animationDuration}\n          min=\"0\"\n          max=\"2000\"\n          onChange={event => setAnimationDuration(event.target.value)}\n        />\n\n        Animation Duration\n      </label>\n\n      <label\n        htmlFor=\"Infinite\"\n        className=\"settings__label settings__label--checkbox\"\n      >\n        <input\n          type=\"checkbox\"\n          className=\"settings__item settings__item--checkbox\"\n          id=\"Infinite\"\n          value={infinite}\n          onChange={checkBoxHandler}\n        />\n        Infinite\n      </label>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  step: number,\n  frameSize: number,\n  animationDuration: string,\n  infinite: string,\n};\n\nlet i = 0;\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  step,\n  frameSize,\n  animationDuration,\n  infinite,\n}) => {\n  const [shift, setShift] = useState(0);\n  const lastPosition = -itemWidth * (images.length - frameSize);\n  const firstPosition = 0;\n\n  function moveLeft() {\n    let nextShift = shift - (itemWidth * step);\n\n    i = (i % (images.length - 1)) + 1;\n\n    if (infinite === 'true') {\n      const loop = [...images].splice(i - 1, 1);\n\n      images.unshift();\n\n      images.push(...loop);\n    } else if (lastPosition > nextShift) {\n      nextShift = lastPosition;\n    }\n\n    setShift(nextShift);\n  }\n\n  function moveRight() {\n    let nextShift = shift + (itemWidth * step);\n\n    i = (i % (images.length - 1)) + 1;\n\n    if (infinite === 'true' && shift === 0) {\n      setShift(-1040);\n\n      return;\n    }\n\n    if (firstPosition < nextShift) {\n      nextShift = firstPosition;\n    }\n\n    setShift(nextShift);\n  }\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__wrapper\"\n        style={{ width: `${frameSize * itemWidth}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${shift}px)`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map(el => (\n            <li key={Math.random()}>\n              <img\n                src={el}\n                alt={String(i)}\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <button\n        className=\"Carousel__btn\"\n        type=\"button\"\n        onClick={() => moveLeft()}\n        disabled={shift === lastPosition && infinite === 'false'}\n      >\n        Prev\n      </button>\n\n      <button\n        className=\"Carousel__btn\"\n        type=\"button\"\n        disabled={shift === 0 && infinite === 'false'}\n        onClick={() => moveRight()}\n        data-cy=\"next\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\n\nimport { Settings } from './components/Settings';\nimport { Carousel } from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App = () => {\n  const [itemWidth, setItemWidth] = useState(130);\n  const [step, setStep] = useState(1);\n  const [frameSize, setFrameSize] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState('500');\n  const [infinite, setInfinite] = useState('false');\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n      <Settings\n        setItemWidth={width => setItemWidth(width)}\n        itemWidth={itemWidth}\n        step={step}\n        setStep={newStep => setStep(newStep)}\n        frameSize={frameSize}\n        setFrameSize={newSize => setFrameSize(newSize)}\n        animationDuration={animationDuration}\n        setAnimationDuration={setAnimationDuration}\n        infinite={infinite}\n        setInfinite={value => {\n          setInfinite(value);\n        }}\n      />\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        step={step}\n        frameSize={frameSize}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}